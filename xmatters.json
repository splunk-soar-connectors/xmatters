{
  "appid": "60E80285-8850-417A-9617-2423D6B9CA76",
  "name": "xMatters",
  "description": "This app supports various <b>investigative</b> actions on <b>xMatters</b>.",
  "type": "ticketing",
  "publisher": "Phantom",
  "main_module": "xmatters_connector.pyc",
  "app_version": "1.0.0",
  "package_name": "phantom_xmatters",
  "product_vendor": "xMatters",
  "product_name": "xMatters",
  "product_version_regex": ".*",
  "min_phantom_version": "2.1.452",
  "logo": "xmatters.png",
  "license": "Copyright (c) Phantom Cyber Corporation 2015-2017",
  "configuration": {
    "username": {
      "data_type": "string",
      "description": "Username",
      "order": 0,
      "required": true
    },
    "password": {
      "data_type": "password",
      "description": "Password",
      "order": 1,
      "required": true
    },
    "base_url": {
      "data_type": "string",
      "description": "Base url, e.g. https://my-company.xmatters.com",
      "order": 2,
      "required": true
    },
    "client_id": {
      "data_type": "string",
      "description": "Client ID. OAuth will be preferred if provided",
      "order": 3,
      "required": false
    }
  },
  "actions": [
    {
      "action": "test connectivity",
      "description": "Validate the asset configuration for connectivity. This action runs a quick query on the server to check the connection and credentials.",
      "type": "test",
      "identifier": "test_asset_connectivity",
      "read_only": true,
      "parameters": {
      },
      "output": [],
      "versions":"EQ(*)"
    },
    {
      "action": "get event",
      "description": "List information about a specific event",
      "type": "investigate",
      "identifier": "get_event",
      "read_only": true,
      "parameters": {
        "event_id": {
          "description": "Event ID",
          "data_type": "string",
          "required": true,
          "order": 0
        },
        "embed_recipients": {
          "description": "Embed Recipients",
          "data_type": "boolean",
          "required": false,
          "default": false,
          "order": 1
        },
        "embed_response_object": {
          "description": "Embed Response Object",
          "data_type": "boolean",
          "required": false,
          "default": false,
          "order": 2
        },
        "targeted": {
          "description": "Return directly targeted recipients",
          "data_type": "boolean",
          "required": false,
          "default": false,
          "order": 3
        }
      },
      "output": [],
      "versions":"EQ(*)"
    },
    {
      "action": "update event",
      "description": "Update the status of an event",
      "type": "investigate",
      "identifier": "update_event",
      "read_only": true,
      "parameters": {
        "event_id": {
          "description": "Event ID",
          "data_type": "string",
          "required": true,
          "order": 0
        },
        "status": {
          "description": "Status of the event",
          "data_type": "string",
          "value_list": ["ACTIVE", "SUSPENDED", "TERMINATED"],
          "required": true,
          "order": 1
        }
      },
      "output": [],
      "versions":"EQ(*)"
    },
    {
      "action": "get person",
      "description": "Get a single person object",
      "type": "investigate",
      "identifier": "get_person",
      "read_only": true,
      "parameters": {
        "identifier": {
          "description": "Either the Target Name or ID of the person",
          "data_type": "string",
          "required": true,
          "order": 0
        },
        "embed_roles": {
          "description": "Include a list of each persons's roles",
          "data_type": "boolean",
          "order": 1,
          "required": false,
          "default": false
        }
      },
      "output": [],
      "versions": "EQ(*)"
    },
    {
      "action": "initiate event",
      "description": "Initiate an event. See <a href=\"https://help.xmatters.com/OnDemand/xmodwelcome/communicationplanbuilder/appendixrestapi.htm?cshid=apiPOSTtrigger#POSTtrigger\">this link</a> for more information on the fields. The input expects the actual string literal representations of their respective fields. Lists need to be enclosed in square braces, objects in curly braces, etc.",
      "type": "investigate", 
      "identifier": "initiate_event",
      "read_only": true,
      "parameters": {
        "form_uuid": {
          "description": "The Form UUID",
          "data_type": "string",
          "required": true,
          "order": 0
        },
        "recipients": {
          "description": "The list of User Objects, e.g. [{user1}, {user2}]",
          "data_type": "string",
          "required": true,
          "order": 1
        },
        "properties": {
          "description": "A JSON object of property names and values",
          "data_type": "string",
          "required": false,
          "order": 2
        },
        "callbacks": {
          "description": "The list of Event Update Callback Objects",
          "data_type": "string",
          "required": false,
          "order": 3
        },
        "priority": {
          "description": "The priority of the event",
          "data_type": "string",
          "required": false,
          "value_list": ["", "low", "medium", "high", "critical"],
          "order": 4
        },
        "conferences": {
          "description": "The list of conferences bridges",
          "data_type": "string",
          "required": false,
          "order": 5
        },
        "responses": {
          "description": "A list of response option UUIDs",
          "data_type": "string",
          "required": false,
          "allow_list": false,
          "order": 6
        }
      },
      "output": [],
      "versions": "EQ(*)"
    },
    {
      "action": "list people",
      "description": "List people. You can query for a specific per by providing a property name and property value",
      "type": "investigate",
      "identifier": "list_people",
      "read_only": true,
      "parameters": {
        "search": {
          "description": "Search term. Will check first name, last name, weblogin, etc. Seperate values with either a space or a + sign",
          "data_type": "string",
          "required": false, 
          "order": 0
        },
        "embed_roles": {
          "description": "Include a list of each persons's roles",
          "data_type": "boolean",
          "order": 1,
          "required": false,
          "default": false
        },
        "property_name": {
          "description": "Comma seperated list of property names",
          "data_type": "string",
          "required": false,
          "order": 2,
          "allow_list": false
        },
        "property_value": {
          "description": "Comma seperated list of property values",
          "data_type": "string",
          "required": false,
          "order": 3,
          "allow_list": false
        },
        "offset": {
          "description": "Number of items to skip before returning results",
          "data_type": "numeric",
          "required": false,
          "order": 4
        },
        "limit": {
          "description": "The number of items to return",
          "data_type": "numeric",
          "required": false,
          "order": 5
        },
        "page_uri": {
          "description": "URI For the page",
          "data_type": "string",
          "required": false,
          "order": 6
        }
      },
      "output": [],
      "versions":"EQ(*)"
    },
    {
      "action": "list events",
      "description": "List events. You can query for specific events by providing a property name and property value",
      "type": "investigate",
      "identifier": "list_events",
      "read_only": true,
      "parameters": {
        "property_name": {
          "description": "Comma seperated list of property names",
          "data_type": "string",
          "required": false,
          "order": 0,
          "allow_list": false
        },
        "property_value": {
          "description": "Comma seperated list of property values",
          "data_type": "string",
          "required": false,
          "order": 1,
          "allow_list": false
        },
        "offset": {
          "description": "Number of items to skip before returning results",
          "data_type": "numeric",
          "required": false,
          "order": 2
        },
        "limit": {
          "description": "The number of items to return",
          "data_type": "numeric",
          "required": false,
          "order": 3
        },
        "status": {
          "description": "Status of the event",
          "data_type": "string",
          "value_list": ["", "ACTIVE", "SUSPENDED", "TERMINATED"],
          "required": false,
          "order": 4
        },
        "ph": {
          "data_type": "ph",
          "order": 5
        },
        "from": {
          "description": "A date in UTC Format for the start of a time range to search",
          "data_type": "string",
          "required": false,
          "order": 6
        },
        "to": {
          "description": "A date in UTC Format for the end of a time range to search",
          "data_type": "string",
          "required": false,
          "order": 7
        },
        "page_uri": {
          "description": "URI For the page",
          "data_type": "string",
          "required": false,
          "order": 8
        }
      },
      "output": [],
      "versions": "EQ(*)"
    }
  ]
}
